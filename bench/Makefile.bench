##===- bench/Makefile.bench --------------------------------*- Makefile -*-===##
#
#                     The LLVM Compiler Infrastructure
#
# This file is distributed under the University of Illinois Open Source
# License. See LICENSE.TXT for details.
#
##===----------------------------------------------------------------------===##
#
# This file is included by all benchmarks. It is based on LLVM
# Makeifile.unittests.
#
##===----------------------------------------------------------------------===##

# Set up variables for building a benchmark.
ifdef BENCHNAME

# We need these in order to catch OpenCL errors.
REQUIRES_EH = 1
REQUIRES_RTTI = 1

# We need some LLVM libs.
LINK_COMPONENTS += support

include $(LEVEL)/Makefile.common

BenchExe = $(BuildMode)/$(BENCHNAME)$(EXEEXT)

CPP.Flags += -I$(PROJ_SRC_ROOT)/utils/OCLBench/include
CXX.Flags += -Wno-cast-qual

# TODO: implement the ICD-based benchmarking framework and link with OpenCL
# instead of OpenCRun.
BENCHLIBS = -lOCLBench -lOpenCRun

# Add the absolute path to the dynamic library. This is ok because
# we'll never install benchmarks.
ifneq (,$(RPATH))
  LD.Flags += $(RPATH) -Wl,$(SharedLibDir)
endif

# Kernels are stored in separate files, put them in the search path.
export BCL_PATH=$(PROJ_SRC_DIR)

export OPENCRUN_PREFIX_LLVM=$(LLVM_OBJ_ROOT)/$(BuildMode)
export OPENCRUN_PREFIX=$(PROJ_OBJ_ROOT)/$(BuildMode)

$(BenchExe): $(ObjectsO) $(ProjLibsPaths) $(LLVMLibsPaths)
	$(Echo) Linking $(BuildMode) Benchmark $(BENCHNAME) $(StripWarnMsg)
	$(Verb) $(Link) -o $@ $(TOOLLINKOPTS) $(ObjectsO) $(ProjLibsOptions) \
	        $(BENCHLIBS) $(LLVMLibsOptions) $(ExtraLibs) $(TOOLLINKOPTSB) \
		$(LIBS)
	$(Echo) ======= Finished Linking $(BuildMode) Benchmark $(TESTNAME) \
                $(StripWarnMsg)

all:: $(BenchExe)

bench:: $(BenchExe)
	$(BenchExe)

endif
