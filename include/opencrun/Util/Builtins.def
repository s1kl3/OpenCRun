
// Work-item builtins.
BUILTIN("get_work_dim", "Ui")
BUILTIN("get_global_size", "zUi")
BUILTIN("get_global_id", "zUi")
BUILTIN("get_local_size", "zUi")
BUILTIN("get_local_id", "zUi")
BUILTIN("get_num_groups", "zUi")
BUILTIN("get_group_id", "zUi")
BUILTIN("get_global_offset", "zUi")

// Synchronization builtins.
BUILTIN("barrier", "vULi")

// Asynchronous Copy Functions.
#define BUILD_ASYNC_BUILTIN(gentype, types_1, types_2, types_3) \
  BUILTIN("async_work_group_copy_" #gentype, types_1) \
  BUILTIN("async_work_group_strided_copy_" #gentype, types_2) \
  BUILTIN("prefetch_" #gentype, types_3) 

BUILD_ASYNC_BUILTIN(    char,       "ePcPcze",            "ePcPczze",               "vPcz"          )
BUILD_ASYNC_BUILTIN(    char2,      "ePV2cPV2cze",        "ePV2cPV2czze",           "vPV2cz"        )
BUILD_ASYNC_BUILTIN(    char3,      "ePV3cPV3cze",        "ePV3cPV3czze",           "vPV3cz"        )
BUILD_ASYNC_BUILTIN(    char4,      "ePV4cPV4cze",        "ePV4cPV4czze",           "vPV4cz"        )
BUILD_ASYNC_BUILTIN(    char8,      "ePV8cPV8cze",        "ePV8cPV8czze",           "vPV8cz"        )
BUILD_ASYNC_BUILTIN(    char16,     "ePV16cPV16cze",      "ePV16cPV16czze",         "vPV16cz"       )
BUILD_ASYNC_BUILTIN(    uchar,      "ePUcPUcze",          "ePUcPUczze",             "vPUcz"         )
BUILD_ASYNC_BUILTIN(    uchar2,     "ePV2UcPV2Ucze",      "ePV2UcPV2Uczze",         "vPV2Ucz"       )
BUILD_ASYNC_BUILTIN(    uchar3,     "ePV3UcPV3Ucze",      "ePV3UcPV3Uczze",         "vPV3Ucz"       )
BUILD_ASYNC_BUILTIN(    uchar4,     "ePV4UcPV4Ucze",      "ePV4UcPV4Uczze",         "vPV4Ucz"       )
BUILD_ASYNC_BUILTIN(    uchar8,     "ePV8UcPV8Ucze",      "ePV8UcPV8Uczze",         "vPV8Ucz"       )
BUILD_ASYNC_BUILTIN(    uchar16,    "ePV16UcPV16Ucze",    "ePV16UcPV16Uczze",       "vPV16Ucz"      )
BUILD_ASYNC_BUILTIN(    short,      "ePSiPSize",          "ePSiPSizze",             "vPSiz"         )
BUILD_ASYNC_BUILTIN(    short2,     "ePV2SiPV2Size",      "ePV2SiPV2Sizze",         "vPV2Siz"       )
BUILD_ASYNC_BUILTIN(    short3,     "ePV3SiPV3Size",      "ePV3SiPV3Sizze",         "vPV3Siz"       )
BUILD_ASYNC_BUILTIN(    short4,     "ePV4SiPV4Size",      "ePV4SiPV4Sizze",         "vPV4Siz"       )
BUILD_ASYNC_BUILTIN(    short8,     "ePV8SiPV8Size",      "ePV8SiPV8Sizze",         "vPV8Siz"       )
BUILD_ASYNC_BUILTIN(    short16,    "ePV16SiPV16Size",    "ePV16SiPV16Sizze",       "vPV16Siz"      )
BUILD_ASYNC_BUILTIN(    ushort,     "ePUSiPUSize",        "ePUSiPUSizze",           "vPUSiz"        )
BUILD_ASYNC_BUILTIN(    ushort2,    "ePV2USiPV2USize",    "ePV2USiPV2USizze",       "vPV2USiz"      )
BUILD_ASYNC_BUILTIN(    ushort3,    "ePV3USiPV3USize",    "ePV3USiPV3USizze",       "vPV3USiz"      )
BUILD_ASYNC_BUILTIN(    ushort4,    "ePV4USiPV4USize",    "ePV4USiPV4USizze",       "vPV4USiz"      )
BUILD_ASYNC_BUILTIN(    ushort8,    "ePV8USiPV8USize",    "ePV8USiPV8USizze",       "vPV8USiz"      )
BUILD_ASYNC_BUILTIN(    ushort16,   "ePV16USiPV16USize",  "ePV16USiPV16USizze",     "vPV16USiz"     )
BUILD_ASYNC_BUILTIN(    int,        "ePiPize",            "ePiPizze",               "vPiz"          )
BUILD_ASYNC_BUILTIN(    int2,       "ePV2iPV2ize",        "ePV2iPV2izze",           "vPV2iz"        )
BUILD_ASYNC_BUILTIN(    int3,       "ePV3iPV3ize",        "ePV3iPV3izze",           "vPV3iz"        )
BUILD_ASYNC_BUILTIN(    int4,       "ePV4iPV4ize",        "ePV4iPV4izze",           "vPV4iz"        )
BUILD_ASYNC_BUILTIN(    int8,       "ePV8iPV8ize",        "ePV8iPV8izze",           "vPV8iz"        )
BUILD_ASYNC_BUILTIN(    int16,      "ePV16iPV16ize",      "ePV16iPV16izze",         "vPV16iz"       )
BUILD_ASYNC_BUILTIN(    uint,       "ePUiPUize",          "ePUiPUizze",             "vPUiz"         )
BUILD_ASYNC_BUILTIN(    uint2,      "ePV2UiPV2Uize",      "ePV2UiPV2Uizze",         "vPV2Uiz"       )
BUILD_ASYNC_BUILTIN(    uint3,      "ePV3UiPV3Uize",      "ePV3UiPV3Uizze",         "vPV3Uiz"       )
BUILD_ASYNC_BUILTIN(    uint4,      "ePV4UiPV4Uize",      "ePV4UiPV4Uizze",         "vPV4Uiz"       )
BUILD_ASYNC_BUILTIN(    uint8,      "ePV8UiPV8Uize",      "ePV8UiPV8Uizze",         "vPV8Uiz"       )
BUILD_ASYNC_BUILTIN(    uint16,     "ePV16UiPV16Uize",    "ePV16UiPV16Uizze",       "vPV16Uiz"      )
BUILD_ASYNC_BUILTIN(    long,       "ePLiPLize",          "ePLiPLizze",             "vPLiz"         )
BUILD_ASYNC_BUILTIN(    long2,      "ePV2LiPV2Lize",      "ePV2LiPV2Lizze",         "vPV2Liz"       )
BUILD_ASYNC_BUILTIN(    long3,      "ePV3LiPV3Lize",      "ePV3LiPV3Lizze",         "vPV3Liz"       )
BUILD_ASYNC_BUILTIN(    long4,      "ePV4LiPV4Lize",      "ePV4LiPV4Lizze",         "vPV4Liz"       )
BUILD_ASYNC_BUILTIN(    long8,      "ePV8LiPV8Lize",      "ePV8LiPV8Lizze",         "vPV8Liz"       )
BUILD_ASYNC_BUILTIN(    long16,     "ePV16LiPV16Lize",    "ePV16LiPV16Lizze",       "vPV16Liz"      )
BUILD_ASYNC_BUILTIN(    ulong,      "ePULiPULize",        "ePULiPULizze",           "vPULiz"        )
BUILD_ASYNC_BUILTIN(    ulong2,     "ePV2ULiPV2ULize",    "ePV2ULiPV2ULize",        "vPV2ULiz"      )
BUILD_ASYNC_BUILTIN(    ulong3,     "ePV3ULiPV3ULize",    "ePV3ULiPV3ULizze",       "vPV3ULiz"      )
BUILD_ASYNC_BUILTIN(    ulong4,     "ePV4ULiPV4ULize",    "ePV4ULiPV4ULizze",       "vPV4ULiz"      )
BUILD_ASYNC_BUILTIN(    ulong8,     "ePV8ULiPV8ULize",    "ePV8ULiPV8ULizze",       "vPV8ULiz"      )
BUILD_ASYNC_BUILTIN(    ulong16,    "ePV16ULiPV16ULize",  "ePV16ULiPV16ULizze",     "vPV16ULiz"     )
BUILD_ASYNC_BUILTIN(    float,      "ePfPfze",            "ePfPfzze",               "vPfz"          )
BUILD_ASYNC_BUILTIN(    float2,     "ePV2fPV2fze",        "ePV2fPV2fzze",           "vPV2fz"        )
BUILD_ASYNC_BUILTIN(    float3,     "ePV3fPV3fze",        "ePV3fPV3fzze",           "vPV3fz"        )
BUILD_ASYNC_BUILTIN(    float4,     "ePV4fPV4fze",        "ePV4fPV4fzze",           "vPV4fz"        )
BUILD_ASYNC_BUILTIN(    float8,     "ePV8fPV8fze",        "ePV8fPV8fzze",           "vPV8fz"        )
BUILD_ASYNC_BUILTIN(    float16,    "ePV16fPV16fze",      "ePV16fPV16fzze",         "vPV16fz"       )

BUILTIN("wait_group_events", "viPe")
